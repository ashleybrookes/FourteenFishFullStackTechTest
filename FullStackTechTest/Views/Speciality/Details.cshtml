@model FullStackTechTest.Models.SpecialityViewModel.DetailsViewModel

@{
    ViewData["Title"] = Model.IsEditing ? "Edit " : Model.IsInserting ? "Inserting Speciality" : "" + $"{Model.speciality.SpecialityName} ";
}

<script type="text/javascript" async defer>
    

</script>

<div class="container">
    @using (Html.BeginForm("Edit", "Speciality", FormMethod.Post, new { @class = "form-inline" }))
    {

        <div class="pb-4">
            @if (!Model.IsInserting || !Model.IsEditing)
            {
                <a href="@Url.Action("Index")" class="btn btn-primary" role="button">Back</a>
            }
            @if (!Model.IsEditing && !Model.IsInserting)
            {
            
                <a href="@Url.Action("Edit", new { specialityId = Model.speciality.Id })" class="btn btn-primary" role="button">Edit</a>
            } 
            @if (Model.IsInserting || Model.IsEditing)
            {
                <a href="@Url.Action("Details", new { specialityId = Model.speciality.Id })" class="btn btn-primary" role="button">Cancel</a>
            }
            @if (!Model.IsInserting)
            {

                <a onclick="DeleteSpeciality(@Model.speciality.Id);" class="btn btn-danger" role="button">Delete</a>
            }
            @if (Model.IsEditing || Model.IsInserting)
            {
                
                <input type="submit" value="Save" class="btn btn-primary" />
                
            }
        
        
        </div>

    
        <div class="form-group pb-4" >
            <label>Id:</label>
            <input type="number" name="speciality.id" value="@Model.speciality.Id" class="form-control-plaintext" readonly />
        </div>

        <div class="form-group pb-1">
            <label>Speciality Name:</label>
            <input type="text" name="speciality.SpecialityName" value="@Model.speciality.SpecialityName" required maxlength="100" class="@(Model.IsEditing ? "form-control" : Model.IsInserting ? "form-control" : "form-control-plaintext")" @(Model.IsEditing ? "" : Model.IsInserting ? "" : "readonly") />
        </div>
        
    }
    
</div>